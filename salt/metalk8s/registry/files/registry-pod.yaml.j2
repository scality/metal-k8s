apiVersion: v1
kind: Pod
metadata:
  name: registry
  namespace: kube-system
  labels:
    app: registry
    app.kubernetes.io/name: registry
    app.kubernetes.io/version: '{{ registry_version }}'
    app.kubernetes.io/component: registry
    heritage: metalk8s
    app.kubernertes.io/part-of: metalk8s
    app.kubernetes.io/managed-by: salt
spec:
  hostNetwork: true
  priorityClassName: system-cluster-critical
  securityContext:
    runAsUser: {{ salt['user.info'](registry_user)['uid'] }}
    fsGroup: {{ salt['group.info'](registry_group)['gid'] }}
    allowPrivilegeEscalation: false
    readOnlyRootFilesystem: true
    capabilities:
      drop:
        - ALL
  containers:
    - name: registry
      image: docker.io/library/registry:2.7.1
      imagePullPolicy: Never
      command:
        - /bin/registry
        - serve
        - /etc/docker/registry/config.yml
      ports:
        - name: registry
          containerPort: 5000
          protocol: TCP
      livenessProbe:
        httpGet:
          host: localhost
          port: registry
          path: /
      readinessProbe:
        httpGet:
          host: localhost
          port: registry
          path: /
      env:
        - name: REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY
          value: '/var/lib/registry'
        - name: REGISTRY_HTTP_ADDR
          value: '127.0.0.1:5000'
        - name: REGISTRY_HEALTH_STORAGEDRIVER_ENABLED
          value: 'true'
      volumeMounts:
        - name: data
          mountPath: '/var/lib/registry'
  volumes:
    - name: data
      hostPath:
        path: '/var/lib/registry'
        type: Directory
