{
    "data": {
        "groups": [
            {
                "evaluationTime": 0.000876476,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-alertmanager.rules.yaml",
                "interval": 30,
                "lastEvaluation": "2021-05-07T11:54:00.311437754Z",
                "name": "alertmanager.rules",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "The configuration of the instances of the Alertmanager cluster `{{ $labels.namespace }}/{{ $labels.service }}` are out of sync.\n{{ range printf \"alertmanager_config_hash{namespace=\\\"%s\\\",service=\\\"%s\\\"}\" $labels.namespace $labels.service | query }}\nConfiguration hash for pod {{ .Labels.pod }} is \"{{ printf \"%.f\" .Value }}\"\n{{ end }}"
                        },
                        "duration": 300,
                        "evaluationTime": 0.000564221,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:54:00.311444253Z",
                        "name": "AlertmanagerConfigInconsistent",
                        "query": "count by(namespace, service) (count_values by(namespace, service) (\"config_hash\", alertmanager_config_hash{job=\"prometheus-operator-alertmanager\",namespace=\"metalk8s-monitoring\"})) != 1",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Reloading Alertmanager's configuration has failed for {{ $labels.namespace }}/{{ $labels.pod}}."
                        },
                        "duration": 600,
                        "evaluationTime": 0.000104842,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:00.312010647Z",
                        "name": "AlertmanagerFailedReload",
                        "query": "alertmanager_config_last_reload_successful{job=\"prometheus-operator-alertmanager\",namespace=\"metalk8s-monitoring\"} == 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Alertmanager has not found all other members of the cluster."
                        },
                        "duration": 300,
                        "evaluationTime": 0.000194148,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:54:00.312116072Z",
                        "name": "AlertmanagerMembersInconsistent",
                        "query": "alertmanager_cluster_members{job=\"prometheus-operator-alertmanager\",namespace=\"metalk8s-monitoring\"} != on(service) group_left() count by(service) (alertmanager_cluster_members{job=\"prometheus-operator-alertmanager\",namespace=\"metalk8s-monitoring\"})",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.001972902,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-etcd.yaml",
                "interval": 30,
                "lastEvaluation": "2021-05-07T11:54:15.281840261Z",
                "name": "etcd",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "etcd cluster \"{{ $labels.job }}\": insufficient members ({{ $value }})."
                        },
                        "duration": 180,
                        "evaluationTime": 0.000536485,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:54:15.281848377Z",
                        "name": "etcdInsufficientMembers",
                        "query": "sum by(job) (up{job=~\".*etcd.*\"} == bool 1) < ((count by(job) (up{job=~\".*etcd.*\"}) + 1) / 2)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "etcd cluster \"{{ $labels.job }}\": member {{ $labels.instance }} has no leader."
                        },
                        "duration": 60,
                        "evaluationTime": 0.000103058,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:54:15.282386715Z",
                        "name": "etcdNoLeader",
                        "query": "etcd_server_has_leader{job=~\".*etcd.*\"} == 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "etcd cluster \"{{ $labels.job }}\": instance {{ $labels.instance }} has seen {{ $value }} leader changes within the last hour."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000116403,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:15.282490679Z",
                        "name": "etcdHighNumberOfLeaderChanges",
                        "query": "rate(etcd_server_leader_changes_seen_total{job=~\".*etcd.*\"}[15m]) > 3",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "etcd cluster \"{{ $labels.job }}\": {{ $value }}% of requests for {{ $labels.grpc_method }} failed on etcd instance {{ $labels.instance }}."
                        },
                        "duration": 600,
                        "evaluationTime": 0.000177722,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:15.282607849Z",
                        "name": "etcdHighNumberOfFailedGRPCRequests",
                        "query": "100 * sum by(job, instance, grpc_service, grpc_method) (rate(grpc_server_handled_total{grpc_code!=\"OK\",job=~\".*etcd.*\"}[5m])) / sum by(job, instance, grpc_service, grpc_method) (rate(grpc_server_handled_total{job=~\".*etcd.*\"}[5m])) > 1",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "etcd cluster \"{{ $labels.job }}\": {{ $value }}% of requests for {{ $labels.grpc_method }} failed on etcd instance {{ $labels.instance }}."
                        },
                        "duration": 300,
                        "evaluationTime": 0.000139364,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:54:15.282786239Z",
                        "name": "etcdHighNumberOfFailedGRPCRequests",
                        "query": "100 * sum by(job, instance, grpc_service, grpc_method) (rate(grpc_server_handled_total{grpc_code!=\"OK\",job=~\".*etcd.*\"}[5m])) / sum by(job, instance, grpc_service, grpc_method) (rate(grpc_server_handled_total{job=~\".*etcd.*\"}[5m])) > 5",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "etcd cluster \"{{ $labels.job }}\": gRPC requests to {{ $labels.grpc_method }} are taking {{ $value }}s on etcd instance {{ $labels.instance }}."
                        },
                        "duration": 600,
                        "evaluationTime": 0.000181967,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:54:15.282926199Z",
                        "name": "etcdGRPCRequestsSlow",
                        "query": "histogram_quantile(0.99, sum by(job, instance, grpc_service, grpc_method, le) (rate(grpc_server_handling_seconds_bucket{grpc_type=\"unary\",job=~\".*etcd.*\"}[5m]))) > 0.15",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "etcd cluster \"{{ $labels.job }}\": member communication with {{ $labels.To }} is taking {{ $value }}s on etcd instance {{ $labels.instance }}."
                        },
                        "duration": 600,
                        "evaluationTime": 9.2268e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:15.283109007Z",
                        "name": "etcdMemberCommunicationSlow",
                        "query": "histogram_quantile(0.99, rate(etcd_network_peer_round_trip_time_seconds_bucket{job=~\".*etcd.*\"}[5m])) > 0.15",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "etcd cluster \"{{ $labels.job }}\": {{ $value }} proposal failures within the last hour on etcd instance {{ $labels.instance }}."
                        },
                        "duration": 900,
                        "evaluationTime": 6.4979e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:15.283201861Z",
                        "name": "etcdHighNumberOfFailedProposals",
                        "query": "rate(etcd_server_proposals_failed_total{job=~\".*etcd.*\"}[15m]) > 5",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "etcd cluster \"{{ $labels.job }}\": 99th percentile fync durations are {{ $value }}s on etcd instance {{ $labels.instance }}."
                        },
                        "duration": 600,
                        "evaluationTime": 7.6261e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:15.283267387Z",
                        "name": "etcdHighFsyncDurations",
                        "query": "histogram_quantile(0.99, rate(etcd_disk_wal_fsync_duration_seconds_bucket{job=~\".*etcd.*\"}[5m])) > 0.5",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "etcd cluster \"{{ $labels.job }}\": 99th percentile commit durations {{ $value }}s on etcd instance {{ $labels.instance }}."
                        },
                        "duration": 600,
                        "evaluationTime": 7.5741e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:15.2833442Z",
                        "name": "etcdHighCommitDurations",
                        "query": "histogram_quantile(0.99, rate(etcd_disk_backend_commit_duration_seconds_bucket{job=~\".*etcd.*\"}[5m])) > 0.25",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "{{ $value }}% of requests for {{ $labels.method }} failed on etcd instance {{ $labels.instance }}"
                        },
                        "duration": 600,
                        "evaluationTime": 0.000149562,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:15.283420515Z",
                        "name": "etcdHighNumberOfFailedHTTPRequests",
                        "query": "sum by(method) (rate(etcd_http_failed_total{code!=\"404\",job=~\".*etcd.*\"}[5m])) / sum by(method) (rate(etcd_http_received_total{job=~\".*etcd.*\"}[5m])) > 0.01",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "{{ $value }}% of requests for {{ $labels.method }} failed on etcd instance {{ $labels.instance }}."
                        },
                        "duration": 600,
                        "evaluationTime": 0.000168126,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:54:15.283570718Z",
                        "name": "etcdHighNumberOfFailedHTTPRequests",
                        "query": "sum by(method) (rate(etcd_http_failed_total{code!=\"404\",job=~\".*etcd.*\"}[5m])) / sum by(method) (rate(etcd_http_received_total{job=~\".*etcd.*\"}[5m])) > 0.05",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "etcd instance {{ $labels.instance }} HTTP requests to {{ $labels.method }} are slow."
                        },
                        "duration": 600,
                        "evaluationTime": 7.0066e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:15.283740182Z",
                        "name": "etcdHTTPRequestsSlow",
                        "query": "histogram_quantile(0.99, rate(etcd_http_successful_duration_seconds_bucket[5m])) > 0.15",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.000848027,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-general.rules.yaml",
                "interval": 30,
                "lastEvaluation": "2021-05-07T11:53:55.521741543Z",
                "name": "general.rules",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "{{ printf \"%.4g\" $value }}% of the {{ $labels.job }}/{{ $labels.service }} targets in {{ $labels.namespace }} namespace are down."
                        },
                        "duration": 600,
                        "evaluationTime": 0.000583798,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:53:55.521748116Z",
                        "name": "TargetDown",
                        "query": "100 * (count by(job, namespace, service) (up == 0) / count by(job, namespace, service) (up)) > 10",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [
                            {
                                "activeAt": "2021-05-07T11:53:55.520605063Z",
                                "annotations": {
                                    "message": "This is an alert meant to ensure that the entire alerting pipeline is functional.\nThis alert is always firing, therefore it should always be firing in Alertmanager\nand always fire against a receiver. There are integrations with various notification\nmechanisms that send a notification when this alert is not firing. For example the\n\"DeadMansSnitch\" integration in PagerDuty."
                                },
                                "labels": {
                                    "alertname": "Watchdog",
                                    "severity": "none"
                                },
                                "state": "firing",
                                "value": "1e+00"
                            }
                        ],
                        "annotations": {
                            "message": "This is an alert meant to ensure that the entire alerting pipeline is functional.\nThis alert is always firing, therefore it should always be firing in Alertmanager\nand always fire against a receiver. There are integrations with various notification\nmechanisms that send a notification when this alert is not firing. For example the\n\"DeadMansSnitch\" integration in PagerDuty."
                        },
                        "duration": 0,
                        "evaluationTime": 0.000249851,
                        "health": "ok",
                        "labels": {
                            "severity": "none"
                        },
                        "lastEvaluation": "2021-05-07T11:53:55.522334015Z",
                        "name": "Watchdog",
                        "query": "vector(1)",
                        "state": "firing",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.002106024,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-k8s.rules.yaml",
                "interval": 30,
                "lastEvaluation": "2021-05-07T11:54:13.317215717Z",
                "name": "k8s.rules",
                "rules": [
                    {
                        "evaluationTime": 0.000447507,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:54:13.317229535Z",
                        "name": "node_namespace_pod_container:container_cpu_usage_seconds_total:sum_rate",
                        "query": "sum by(cluster, namespace, pod, container) (rate(container_cpu_usage_seconds_total{image!=\"\",job=\"kubelet\",metrics_path=\"/metrics/cadvisor\"}[5m])) * on(cluster, namespace, pod) group_left(node) topk by(cluster, namespace, pod) (1, max by(cluster, namespace, pod, node) (kube_pod_info{node!=\"\"}))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000111462,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:54:13.317678925Z",
                        "name": "node_namespace_pod_container:container_memory_working_set_bytes",
                        "query": "container_memory_working_set_bytes{image!=\"\",job=\"kubelet\",metrics_path=\"/metrics/cadvisor\"} * on(namespace, pod) group_left(node) topk by(namespace, pod) (1, max by(namespace, pod, node) (kube_pod_info{node!=\"\"}))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 9.2276e-05,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:54:13.317791083Z",
                        "name": "node_namespace_pod_container:container_memory_rss",
                        "query": "container_memory_rss{image!=\"\",job=\"kubelet\",metrics_path=\"/metrics/cadvisor\"} * on(namespace, pod) group_left(node) topk by(namespace, pod) (1, max by(namespace, pod, node) (kube_pod_info{node!=\"\"}))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000323204,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:54:13.317884193Z",
                        "name": "node_namespace_pod_container:container_memory_cache",
                        "query": "container_memory_cache{image!=\"\",job=\"kubelet\",metrics_path=\"/metrics/cadvisor\"} * on(namespace, pod) group_left(node) topk by(namespace, pod) (1, max by(namespace, pod, node) (kube_pod_info{node!=\"\"}))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000120924,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:54:13.318208802Z",
                        "name": "node_namespace_pod_container:container_memory_swap",
                        "query": "container_memory_swap{image!=\"\",job=\"kubelet\",metrics_path=\"/metrics/cadvisor\"} * on(namespace, pod) group_left(node) topk by(namespace, pod) (1, max by(namespace, pod, node) (kube_pod_info{node!=\"\"}))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000418846,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:54:13.318330599Z",
                        "name": "namespace_memory:kube_pod_container_resource_requests:sum",
                        "query": "sum by(namespace, cluster) (sum by(namespace, pod, cluster) (max by(namespace, pod, container, cluster) (kube_pod_container_resource_requests{job=\"kube-state-metrics\",resource=\"memory\"}) * on(namespace, pod, cluster) group_left() max by(namespace, pod) (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000197581,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:54:13.318751237Z",
                        "name": "namespace_cpu:kube_pod_container_resource_requests:sum",
                        "query": "sum by(namespace, cluster) (sum by(namespace, pod, cluster) (max by(namespace, pod, container, cluster) (kube_pod_container_resource_requests{job=\"kube-state-metrics\",resource=\"cpu\"}) * on(namespace, pod, cluster) group_left() max by(namespace, pod) (kube_pod_status_phase{phase=~\"Pending|Running\"} == 1)))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000210718,
                        "health": "ok",
                        "labels": {
                            "workload_type": "deployment"
                        },
                        "lastEvaluation": "2021-05-07T11:54:13.318949502Z",
                        "name": "namespace_workload_pod:kube_pod_owner:relabel",
                        "query": "max by(cluster, namespace, workload, pod) (label_replace(label_replace(kube_pod_owner{job=\"kube-state-metrics\",owner_kind=\"ReplicaSet\"}, \"replicaset\", \"$1\", \"owner_name\", \"(.*)\") * on(replicaset, namespace) group_left(owner_name) topk by(replicaset, namespace) (1, max by(replicaset, namespace, owner_name) (kube_replicaset_owner{job=\"kube-state-metrics\"})), \"workload\", \"$1\", \"owner_name\", \"(.*)\"))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 7.3376e-05,
                        "health": "ok",
                        "labels": {
                            "workload_type": "daemonset"
                        },
                        "lastEvaluation": "2021-05-07T11:54:13.319160895Z",
                        "name": "namespace_workload_pod:kube_pod_owner:relabel",
                        "query": "max by(cluster, namespace, workload, pod) (label_replace(kube_pod_owner{job=\"kube-state-metrics\",owner_kind=\"DaemonSet\"}, \"workload\", \"$1\", \"owner_name\", \"(.*)\"))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 8.3187e-05,
                        "health": "ok",
                        "labels": {
                            "workload_type": "statefulset"
                        },
                        "lastEvaluation": "2021-05-07T11:54:13.319235159Z",
                        "name": "namespace_workload_pod:kube_pod_owner:relabel",
                        "query": "max by(cluster, namespace, workload, pod) (label_replace(kube_pod_owner{job=\"kube-state-metrics\",owner_kind=\"StatefulSet\"}, \"workload\", \"$1\", \"owner_name\", \"(.*)\"))",
                        "type": "recording"
                    }
                ]
            },
            {
                "evaluationTime": 0,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kube-apiserver-availability.rules.yaml",
                "interval": 180,
                "lastEvaluation": "0001-01-01T00:00:00Z",
                "name": "kube-apiserver-availability.rules",
                "rules": [
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "labels": {
                            "verb": "all"
                        },
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "apiserver_request:availability30d",
                        "query": "1 - ((sum(increase(apiserver_request_duration_seconds_count{verb=~\"POST|PUT|PATCH|DELETE\"}[30d])) - sum(increase(apiserver_request_duration_seconds_bucket{le=\"1\",verb=~\"POST|PUT|PATCH|DELETE\"}[30d]))) + (sum(increase(apiserver_request_duration_seconds_count{verb=~\"LIST|GET\"}[30d])) - ((sum(increase(apiserver_request_duration_seconds_bucket{le=\"0.1\",scope=~\"resource|\",verb=~\"LIST|GET\"}[30d])) or vector(0)) + sum(increase(apiserver_request_duration_seconds_bucket{le=\"0.5\",scope=\"namespace\",verb=~\"LIST|GET\"}[30d])) + sum(increase(apiserver_request_duration_seconds_bucket{le=\"5\",scope=\"cluster\",verb=~\"LIST|GET\"}[30d])))) + sum(code:apiserver_request_total:increase30d{code=~\"5..\"} or vector(0))) / sum(code:apiserver_request_total:increase30d)",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "labels": {
                            "verb": "read"
                        },
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "apiserver_request:availability30d",
                        "query": "1 - (sum(increase(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[30d])) - ((sum(increase(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.1\",scope=~\"resource|\",verb=~\"LIST|GET\"}[30d])) or vector(0)) + sum(increase(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.5\",scope=\"namespace\",verb=~\"LIST|GET\"}[30d])) + sum(increase(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"5\",scope=\"cluster\",verb=~\"LIST|GET\"}[30d]))) + sum(code:apiserver_request_total:increase30d{code=~\"5..\",verb=\"read\"} or vector(0))) / sum(code:apiserver_request_total:increase30d{verb=\"read\"})",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "labels": {
                            "verb": "write"
                        },
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "apiserver_request:availability30d",
                        "query": "1 - ((sum(increase(apiserver_request_duration_seconds_count{verb=~\"POST|PUT|PATCH|DELETE\"}[30d])) - sum(increase(apiserver_request_duration_seconds_bucket{le=\"1\",verb=~\"POST|PUT|PATCH|DELETE\"}[30d]))) + sum(code:apiserver_request_total:increase30d{code=~\"5..\",verb=\"write\"} or vector(0))) / sum(code:apiserver_request_total:increase30d{verb=\"write\"})",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase30d",
                        "query": "avg_over_time(code_verb:apiserver_request_total:increase1h[30d]) * 24 * 30",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"2..\",job=\"apiserver\",verb=\"LIST\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"2..\",job=\"apiserver\",verb=\"GET\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"2..\",job=\"apiserver\",verb=\"POST\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"2..\",job=\"apiserver\",verb=\"PUT\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"2..\",job=\"apiserver\",verb=\"PATCH\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"2..\",job=\"apiserver\",verb=\"DELETE\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"3..\",job=\"apiserver\",verb=\"LIST\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"3..\",job=\"apiserver\",verb=\"GET\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"3..\",job=\"apiserver\",verb=\"POST\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"3..\",job=\"apiserver\",verb=\"PUT\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"3..\",job=\"apiserver\",verb=\"PATCH\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"3..\",job=\"apiserver\",verb=\"DELETE\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"4..\",job=\"apiserver\",verb=\"LIST\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"4..\",job=\"apiserver\",verb=\"GET\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"4..\",job=\"apiserver\",verb=\"POST\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"4..\",job=\"apiserver\",verb=\"PUT\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"4..\",job=\"apiserver\",verb=\"PATCH\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"4..\",job=\"apiserver\",verb=\"DELETE\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=\"LIST\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=\"GET\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=\"POST\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=\"PUT\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=\"PATCH\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code_verb:apiserver_request_total:increase1h",
                        "query": "sum by(code, verb) (increase(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=\"DELETE\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "labels": {
                            "verb": "read"
                        },
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code:apiserver_request_total:increase30d",
                        "query": "sum by(code) (code_verb:apiserver_request_total:increase30d{verb=~\"LIST|GET\"})",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "labels": {
                            "verb": "write"
                        },
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "code:apiserver_request_total:increase30d",
                        "query": "sum by(code) (code_verb:apiserver_request_total:increase30d{verb=~\"POST|PUT|PATCH|DELETE\"})",
                        "type": "recording"
                    }
                ]
            },
            {
                "evaluationTime": 0.000995342,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kube-apiserver-slos.yaml",
                "interval": 30,
                "lastEvaluation": "2021-05-07T11:54:02.746732767Z",
                "name": "kube-apiserver-slos",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "The API server is burning too much error budget.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn",
                            "summary": "The API server is burning too much error budget."
                        },
                        "duration": 120,
                        "evaluationTime": 0.000505161,
                        "health": "ok",
                        "labels": {
                            "long": "1h",
                            "severity": "critical",
                            "short": "5m"
                        },
                        "lastEvaluation": "2021-05-07T11:54:02.746739383Z",
                        "name": "KubeAPIErrorBudgetBurn",
                        "query": "sum(apiserver_request:burnrate1h) > (14.4 * 0.01) and sum(apiserver_request:burnrate5m) > (14.4 * 0.01)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "The API server is burning too much error budget.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn",
                            "summary": "The API server is burning too much error budget."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000154635,
                        "health": "ok",
                        "labels": {
                            "long": "6h",
                            "severity": "critical",
                            "short": "30m"
                        },
                        "lastEvaluation": "2021-05-07T11:54:02.74724678Z",
                        "name": "KubeAPIErrorBudgetBurn",
                        "query": "sum(apiserver_request:burnrate6h) > (6 * 0.01) and sum(apiserver_request:burnrate30m) > (6 * 0.01)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "The API server is burning too much error budget.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn",
                            "summary": "The API server is burning too much error budget."
                        },
                        "duration": 3600,
                        "evaluationTime": 0.000183328,
                        "health": "ok",
                        "labels": {
                            "long": "1d",
                            "severity": "warning",
                            "short": "2h"
                        },
                        "lastEvaluation": "2021-05-07T11:54:02.74740203Z",
                        "name": "KubeAPIErrorBudgetBurn",
                        "query": "sum(apiserver_request:burnrate1d) > (3 * 0.01) and sum(apiserver_request:burnrate2h) > (3 * 0.01)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "The API server is burning too much error budget.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapierrorbudgetburn",
                            "summary": "The API server is burning too much error budget."
                        },
                        "duration": 10800,
                        "evaluationTime": 0.000138795,
                        "health": "ok",
                        "labels": {
                            "long": "3d",
                            "severity": "warning",
                            "short": "6h"
                        },
                        "lastEvaluation": "2021-05-07T11:54:02.747586416Z",
                        "name": "KubeAPIErrorBudgetBurn",
                        "query": "sum(apiserver_request:burnrate3d) > (1 * 0.01) and sum(apiserver_request:burnrate6h) > (1 * 0.01)",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.013675876,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kube-apiserver.rules.yaml",
                "interval": 30,
                "lastEvaluation": "2021-05-07T11:54:01.976869389Z",
                "name": "kube-apiserver.rules",
                "rules": [
                    {
                        "evaluationTime": 0.001144918,
                        "health": "ok",
                        "labels": {
                            "verb": "read"
                        },
                        "lastEvaluation": "2021-05-07T11:54:01.976876501Z",
                        "name": "apiserver_request:burnrate1d",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[1d])) - ((sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.1\",scope=~\"resource|\",verb=~\"LIST|GET\"}[1d])) or vector(0)) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.5\",scope=\"namespace\",verb=~\"LIST|GET\"}[1d])) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"5\",scope=\"cluster\",verb=~\"LIST|GET\"}[1d])))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"LIST|GET\"}[1d]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[1d]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000813245,
                        "health": "ok",
                        "labels": {
                            "verb": "read"
                        },
                        "lastEvaluation": "2021-05-07T11:54:01.978025644Z",
                        "name": "apiserver_request:burnrate1h",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[1h])) - ((sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.1\",scope=~\"resource|\",verb=~\"LIST|GET\"}[1h])) or vector(0)) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.5\",scope=\"namespace\",verb=~\"LIST|GET\"}[1h])) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"5\",scope=\"cluster\",verb=~\"LIST|GET\"}[1h])))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"LIST|GET\"}[1h]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.00055396,
                        "health": "ok",
                        "labels": {
                            "verb": "read"
                        },
                        "lastEvaluation": "2021-05-07T11:54:01.978841277Z",
                        "name": "apiserver_request:burnrate2h",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[2h])) - ((sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.1\",scope=~\"resource|\",verb=~\"LIST|GET\"}[2h])) or vector(0)) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.5\",scope=\"namespace\",verb=~\"LIST|GET\"}[2h])) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"5\",scope=\"cluster\",verb=~\"LIST|GET\"}[2h])))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"LIST|GET\"}[2h]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[2h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000803037,
                        "health": "ok",
                        "labels": {
                            "verb": "read"
                        },
                        "lastEvaluation": "2021-05-07T11:54:01.979396255Z",
                        "name": "apiserver_request:burnrate30m",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[30m])) - ((sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.1\",scope=~\"resource|\",verb=~\"LIST|GET\"}[30m])) or vector(0)) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.5\",scope=\"namespace\",verb=~\"LIST|GET\"}[30m])) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"5\",scope=\"cluster\",verb=~\"LIST|GET\"}[30m])))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"LIST|GET\"}[30m]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[30m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000484351,
                        "health": "ok",
                        "labels": {
                            "verb": "read"
                        },
                        "lastEvaluation": "2021-05-07T11:54:01.980200375Z",
                        "name": "apiserver_request:burnrate3d",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[3d])) - ((sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.1\",scope=~\"resource|\",verb=~\"LIST|GET\"}[3d])) or vector(0)) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.5\",scope=\"namespace\",verb=~\"LIST|GET\"}[3d])) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"5\",scope=\"cluster\",verb=~\"LIST|GET\"}[3d])))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"LIST|GET\"}[3d]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[3d]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.006218982,
                        "health": "ok",
                        "labels": {
                            "verb": "read"
                        },
                        "lastEvaluation": "2021-05-07T11:54:01.980685701Z",
                        "name": "apiserver_request:burnrate5m",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[5m])) - ((sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.1\",scope=~\"resource|\",verb=~\"LIST|GET\"}[5m])) or vector(0)) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.5\",scope=\"namespace\",verb=~\"LIST|GET\"}[5m])) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"5\",scope=\"cluster\",verb=~\"LIST|GET\"}[5m])))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000753218,
                        "health": "ok",
                        "labels": {
                            "verb": "read"
                        },
                        "lastEvaluation": "2021-05-07T11:54:01.986908259Z",
                        "name": "apiserver_request:burnrate6h",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"LIST|GET\"}[6h])) - ((sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.1\",scope=~\"resource|\",verb=~\"LIST|GET\"}[6h])) or vector(0)) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"0.5\",scope=\"namespace\",verb=~\"LIST|GET\"}[6h])) + sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"5\",scope=\"cluster\",verb=~\"LIST|GET\"}[6h])))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"LIST|GET\"}[6h]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[6h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.00044547,
                        "health": "ok",
                        "labels": {
                            "verb": "write"
                        },
                        "lastEvaluation": "2021-05-07T11:54:01.987663968Z",
                        "name": "apiserver_request:burnrate1d",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1d])) - sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"1\",verb=~\"POST|PUT|PATCH|DELETE\"}[1d]))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1d]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1d]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000322431,
                        "health": "ok",
                        "labels": {
                            "verb": "write"
                        },
                        "lastEvaluation": "2021-05-07T11:54:01.988111393Z",
                        "name": "apiserver_request:burnrate1h",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1h])) - sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"1\",verb=~\"POST|PUT|PATCH|DELETE\"}[1h]))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1h]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[1h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000255712,
                        "health": "ok",
                        "labels": {
                            "verb": "write"
                        },
                        "lastEvaluation": "2021-05-07T11:54:01.988435564Z",
                        "name": "apiserver_request:burnrate2h",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[2h])) - sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"1\",verb=~\"POST|PUT|PATCH|DELETE\"}[2h]))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[2h]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[2h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000248511,
                        "health": "ok",
                        "labels": {
                            "verb": "write"
                        },
                        "lastEvaluation": "2021-05-07T11:54:01.988691854Z",
                        "name": "apiserver_request:burnrate30m",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[30m])) - sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"1\",verb=~\"POST|PUT|PATCH|DELETE\"}[30m]))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[30m]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[30m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.00028714,
                        "health": "ok",
                        "labels": {
                            "verb": "write"
                        },
                        "lastEvaluation": "2021-05-07T11:54:01.98894108Z",
                        "name": "apiserver_request:burnrate3d",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[3d])) - sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"1\",verb=~\"POST|PUT|PATCH|DELETE\"}[3d]))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[3d]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[3d]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000236354,
                        "health": "ok",
                        "labels": {
                            "verb": "write"
                        },
                        "lastEvaluation": "2021-05-07T11:54:01.989228993Z",
                        "name": "apiserver_request:burnrate5m",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m])) - sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"1\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000244994,
                        "health": "ok",
                        "labels": {
                            "verb": "write"
                        },
                        "lastEvaluation": "2021-05-07T11:54:01.98946598Z",
                        "name": "apiserver_request:burnrate6h",
                        "query": "((sum(rate(apiserver_request_duration_seconds_count{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[6h])) - sum(rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",le=\"1\",verb=~\"POST|PUT|PATCH|DELETE\"}[6h]))) + sum(rate(apiserver_request_total{code=~\"5..\",job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[6h]))) / sum(rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[6h]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 6.5445e-05,
                        "health": "ok",
                        "labels": {
                            "verb": "read"
                        },
                        "lastEvaluation": "2021-05-07T11:54:01.989711525Z",
                        "name": "code_resource:apiserver_request_total:rate5m",
                        "query": "sum by(code, resource) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 6.9099e-05,
                        "health": "ok",
                        "labels": {
                            "verb": "write"
                        },
                        "lastEvaluation": "2021-05-07T11:54:01.989777512Z",
                        "name": "code_resource:apiserver_request_total:rate5m",
                        "query": "sum by(code, resource) (rate(apiserver_request_total{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000107092,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.99",
                            "verb": "read"
                        },
                        "lastEvaluation": "2021-05-07T11:54:01.989847218Z",
                        "name": "cluster_quantile:apiserver_request_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.99, sum by(le, resource) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"LIST|GET\"}[5m]))) > 0",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000118494,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.99",
                            "verb": "write"
                        },
                        "lastEvaluation": "2021-05-07T11:54:01.989954975Z",
                        "name": "cluster_quantile:apiserver_request_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.99, sum by(le, resource) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",verb=~\"POST|PUT|PATCH|DELETE\"}[5m]))) > 0",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000127885,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.99"
                        },
                        "lastEvaluation": "2021-05-07T11:54:01.990074534Z",
                        "name": "cluster_quantile:apiserver_request_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.99, sum without(instance, pod) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",subresource!=\"log\",verb!~\"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT\"}[5m])))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 9.9516e-05,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.9"
                        },
                        "lastEvaluation": "2021-05-07T11:54:01.99020298Z",
                        "name": "cluster_quantile:apiserver_request_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.9, sum without(instance, pod) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",subresource!=\"log\",verb!~\"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT\"}[5m])))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000239072,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.5"
                        },
                        "lastEvaluation": "2021-05-07T11:54:01.990303074Z",
                        "name": "cluster_quantile:apiserver_request_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.5, sum without(instance, pod) (rate(apiserver_request_duration_seconds_bucket{job=\"apiserver\",subresource!=\"log\",verb!~\"LIST|WATCH|WATCHLIST|DELETECOLLECTION|PROXY|CONNECT\"}[5m])))",
                        "type": "recording"
                    }
                ]
            },
            {
                "evaluationTime": 0.000378776,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kube-prometheus-general.rules.yaml",
                "interval": 30,
                "lastEvaluation": "2021-05-07T11:53:57.649635585Z",
                "name": "kube-prometheus-general.rules",
                "rules": [
                    {
                        "evaluationTime": 0.000311649,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:53:57.649642394Z",
                        "name": "count:up1",
                        "query": "count without(instance, pod, node) (up == 1)",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 5.5395e-05,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:53:57.64995591Z",
                        "name": "count:up0",
                        "query": "count without(instance, pod, node) (up == 0)",
                        "type": "recording"
                    }
                ]
            },
            {
                "evaluationTime": 0.001361737,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kube-prometheus-node-recording.rules.yaml",
                "interval": 30,
                "lastEvaluation": "2021-05-07T11:54:13.690356682Z",
                "name": "kube-prometheus-node-recording.rules",
                "rules": [
                    {
                        "evaluationTime": 0.000343424,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:54:13.690362971Z",
                        "name": "instance:node_cpu:rate:sum",
                        "query": "sum by(instance) (rate(node_cpu_seconds_total{mode!=\"idle\",mode!=\"iowait\",mode!=\"steal\"}[3m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 9.9183e-05,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:54:13.690708388Z",
                        "name": "instance:node_network_receive_bytes:rate:sum",
                        "query": "sum by(instance) (rate(node_network_receive_bytes_total[3m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 5.8018e-05,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:54:13.690808274Z",
                        "name": "instance:node_network_transmit_bytes:rate:sum",
                        "query": "sum by(instance) (rate(node_network_transmit_bytes_total[3m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000138124,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:54:13.690866888Z",
                        "name": "instance:node_cpu:ratio",
                        "query": "sum without(cpu, mode) (rate(node_cpu_seconds_total{mode!=\"idle\",mode!=\"iowait\",mode!=\"steal\"}[5m])) / on(instance) group_left() count by(instance) (sum by(instance, cpu) (node_cpu_seconds_total))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 7.8834e-05,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:54:13.691005933Z",
                        "name": "cluster:node_cpu:sum_rate5m",
                        "query": "sum(rate(node_cpu_seconds_total{mode!=\"idle\",mode!=\"iowait\",mode!=\"steal\"}[5m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000626706,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:54:13.69108539Z",
                        "name": "cluster:node_cpu:ratio",
                        "query": "cluster:node_cpu_seconds_total:rate5m / count(sum by(instance, cpu) (node_cpu_seconds_total))",
                        "type": "recording"
                    }
                ]
            },
            {
                "evaluationTime": 0.001545733,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kube-scheduler.rules.yaml",
                "interval": 30,
                "lastEvaluation": "2021-05-07T11:54:00.190569462Z",
                "name": "kube-scheduler.rules",
                "rules": [
                    {
                        "evaluationTime": 0.000508416,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.99"
                        },
                        "lastEvaluation": "2021-05-07T11:54:00.190576976Z",
                        "name": "cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.99, sum without(instance, pod) (rate(scheduler_e2e_scheduling_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000150656,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.99"
                        },
                        "lastEvaluation": "2021-05-07T11:54:00.191087529Z",
                        "name": "cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.99, sum without(instance, pod) (rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000179002,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.99"
                        },
                        "lastEvaluation": "2021-05-07T11:54:00.191239788Z",
                        "name": "cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.99, sum without(instance, pod) (rate(scheduler_binding_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000142047,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.9"
                        },
                        "lastEvaluation": "2021-05-07T11:54:00.191420721Z",
                        "name": "cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.9, sum without(instance, pod) (rate(scheduler_e2e_scheduling_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000113893,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.9"
                        },
                        "lastEvaluation": "2021-05-07T11:54:00.191563795Z",
                        "name": "cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.9, sum without(instance, pod) (rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000109705,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.9"
                        },
                        "lastEvaluation": "2021-05-07T11:54:00.191678724Z",
                        "name": "cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.9, sum without(instance, pod) (rate(scheduler_binding_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000109098,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.5"
                        },
                        "lastEvaluation": "2021-05-07T11:54:00.191789534Z",
                        "name": "cluster_quantile:scheduler_e2e_scheduling_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.5, sum without(instance, pod) (rate(scheduler_e2e_scheduling_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 9.3432e-05,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.5"
                        },
                        "lastEvaluation": "2021-05-07T11:54:00.191899842Z",
                        "name": "cluster_quantile:scheduler_scheduling_algorithm_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.5, sum without(instance, pod) (rate(scheduler_scheduling_algorithm_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000117234,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.5"
                        },
                        "lastEvaluation": "2021-05-07T11:54:00.191994418Z",
                        "name": "cluster_quantile:scheduler_binding_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.5, sum without(instance, pod) (rate(scheduler_binding_duration_seconds_bucket{job=\"kube-scheduler\"}[5m])))",
                        "type": "recording"
                    }
                ]
            },
            {
                "evaluationTime": 0,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kube-state-metrics.yaml",
                "interval": 30,
                "lastEvaluation": "0001-01-01T00:00:00Z",
                "name": "kube-state-metrics",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "kube-state-metrics is experiencing errors at an elevated rate in list operations. This is likely causing it to not be able to expose metrics about Kubernetes objects correctly or at all.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatemetricslisterrors",
                            "summary": "kube-state-metrics is experiencing errors in list operations."
                        },
                        "duration": 900,
                        "evaluationTime": 0,
                        "health": "unknown",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "KubeStateMetricsListErrors",
                        "query": "(sum(rate(kube_state_metrics_list_total{job=\"kube-state-metrics\",result=\"error\"}[5m])) / sum(rate(kube_state_metrics_list_total{job=\"kube-state-metrics\"}[5m]))) > 0.01",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "kube-state-metrics is experiencing errors at an elevated rate in watch operations. This is likely causing it to not be able to expose metrics about Kubernetes objects correctly or at all.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatemetricswatcherrors",
                            "summary": "kube-state-metrics is experiencing errors in watch operations."
                        },
                        "duration": 900,
                        "evaluationTime": 0,
                        "health": "unknown",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "KubeStateMetricsWatchErrors",
                        "query": "(sum(rate(kube_state_metrics_watch_total{job=\"kube-state-metrics\",result=\"error\"}[5m])) / sum(rate(kube_state_metrics_watch_total{job=\"kube-state-metrics\"}[5m]))) > 0.01",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.000667492,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kubelet.rules.yaml",
                "interval": 30,
                "lastEvaluation": "2021-05-07T11:53:56.101954582Z",
                "name": "kubelet.rules",
                "rules": [
                    {
                        "evaluationTime": 0.000476581,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.99"
                        },
                        "lastEvaluation": "2021-05-07T11:53:56.10196087Z",
                        "name": "node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.99, sum by(instance, le) (rate(kubelet_pleg_relist_duration_seconds_bucket[5m])) * on(instance) group_left(node) kubelet_node_name{job=\"kubelet\",metrics_path=\"/metrics\"})",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000106191,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.9"
                        },
                        "lastEvaluation": "2021-05-07T11:53:56.102439652Z",
                        "name": "node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.9, sum by(instance, le) (rate(kubelet_pleg_relist_duration_seconds_bucket[5m])) * on(instance) group_left(node) kubelet_node_name{job=\"kubelet\",metrics_path=\"/metrics\"})",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 7.3055e-05,
                        "health": "ok",
                        "labels": {
                            "quantile": "0.5"
                        },
                        "lastEvaluation": "2021-05-07T11:53:56.102546416Z",
                        "name": "node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile",
                        "query": "histogram_quantile(0.5, sum by(instance, le) (rate(kubelet_pleg_relist_duration_seconds_bucket[5m])) * on(instance) group_left(node) kubelet_node_name{job=\"kubelet\",metrics_path=\"/metrics\"})",
                        "type": "recording"
                    }
                ]
            },
            {
                "evaluationTime": 0.004738015,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kubernetes-apps.yaml",
                "interval": 30,
                "lastEvaluation": "2021-05-07T11:54:10.003687644Z",
                "name": "kubernetes-apps",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Pod {{ $labels.namespace }}/{{ $labels.pod }} ({{ $labels.container }}) is restarting {{ printf \"%.2f\" $value }} times / 10 minutes.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepodcrashlooping",
                            "summary": "Pod is crash looping."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000544943,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:10.003694374Z",
                        "name": "KubePodCrashLooping",
                        "query": "rate(kube_pod_container_status_restarts_total{job=\"kube-state-metrics\",namespace=~\".*\"}[10m]) * 60 * 5 > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Pod {{ $labels.namespace }}/{{ $labels.pod }} has been in a non-ready state for longer than 15 minutes.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepodnotready",
                            "summary": "Pod has been in a non-ready state for more than 15 minutes."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000459652,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:10.004242086Z",
                        "name": "KubePodNotReady",
                        "query": "sum by(namespace, pod) (max by(namespace, pod) (kube_pod_status_phase{job=\"kube-state-metrics\",namespace=~\".*\",phase=~\"Pending|Unknown\"}) * on(namespace, pod) group_left(owner_kind) topk by(namespace, pod) (1, max by(namespace, pod, owner_kind) (kube_pod_owner{owner_kind!=\"Job\"}))) > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Deployment generation for {{ $labels.namespace }}/{{ $labels.deployment }} does not match, this indicates that the Deployment has failed but has not been rolled back.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentgenerationmismatch",
                            "summary": "Deployment generation mismatch due to possible roll-back"
                        },
                        "duration": 900,
                        "evaluationTime": 0.000170955,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:10.004704179Z",
                        "name": "KubeDeploymentGenerationMismatch",
                        "query": "kube_deployment_status_observed_generation{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_deployment_metadata_generation{job=\"kube-state-metrics\",namespace=~\".*\"}",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Deployment {{ $labels.namespace }}/{{ $labels.deployment }} has not matched the expected number of replicas for longer than 15 minutes.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedeploymentreplicasmismatch",
                            "summary": "Deployment has not matched the expected number of replicas."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000288162,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:10.004875947Z",
                        "name": "KubeDeploymentReplicasMismatch",
                        "query": "(kube_deployment_spec_replicas{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_deployment_status_replicas_available{job=\"kube-state-metrics\",namespace=~\".*\"}) and (changes(kube_deployment_status_replicas_updated{job=\"kube-state-metrics\",namespace=~\".*\"}[10m]) == 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} has not matched the expected number of replicas for longer than 15 minutes.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetreplicasmismatch",
                            "summary": "Deployment has not matched the expected number of replicas."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000233724,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:10.005165324Z",
                        "name": "KubeStatefulSetReplicasMismatch",
                        "query": "(kube_statefulset_status_replicas_ready{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_statefulset_status_replicas{job=\"kube-state-metrics\",namespace=~\".*\"}) and (changes(kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\",namespace=~\".*\"}[10m]) == 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "StatefulSet generation for {{ $labels.namespace }}/{{ $labels.statefulset }} does not match, this indicates that the StatefulSet has failed but has not been rolled back.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetgenerationmismatch",
                            "summary": "StatefulSet generation mismatch due to possible roll-back"
                        },
                        "duration": 900,
                        "evaluationTime": 0.000179212,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:10.005400219Z",
                        "name": "KubeStatefulSetGenerationMismatch",
                        "query": "kube_statefulset_status_observed_generation{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_statefulset_metadata_generation{job=\"kube-state-metrics\",namespace=~\".*\"}",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "StatefulSet {{ $labels.namespace }}/{{ $labels.statefulset }} update has not been rolled out.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubestatefulsetupdatenotrolledout",
                            "summary": "StatefulSet update has not been rolled out."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000307299,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:10.005580909Z",
                        "name": "KubeStatefulSetUpdateNotRolledOut",
                        "query": "(max without(revision) (kube_statefulset_status_current_revision{job=\"kube-state-metrics\",namespace=~\".*\"} unless kube_statefulset_status_update_revision{job=\"kube-state-metrics\",namespace=~\".*\"}) * (kube_statefulset_replicas{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\",namespace=~\".*\"})) and (changes(kube_statefulset_status_replicas_updated{job=\"kube-state-metrics\",namespace=~\".*\"}[5m]) == 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} has not finished or progressed for at least 15 minutes.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetrolloutstuck",
                            "summary": "DaemonSet rollout is stuck."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000504864,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:10.005889373Z",
                        "name": "KubeDaemonSetRolloutStuck",
                        "query": "((kube_daemonset_status_current_number_scheduled{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\",namespace=~\".*\"}) or (kube_daemonset_status_number_misscheduled{job=\"kube-state-metrics\",namespace=~\".*\"} != 0) or (kube_daemonset_updated_number_scheduled{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\",namespace=~\".*\"}) or (kube_daemonset_status_number_available{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\",namespace=~\".*\"})) and (changes(kube_daemonset_updated_number_scheduled{job=\"kube-state-metrics\",namespace=~\".*\"}[5m]) == 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Pod {{ $labels.namespace }}/{{ $labels.pod }} container {{ $labels.container}} has been in waiting state for longer than 1 hour.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecontainerwaiting",
                            "summary": "Pod container waiting longer than 1 hour"
                        },
                        "duration": 3600,
                        "evaluationTime": 0.000550359,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:10.006395616Z",
                        "name": "KubeContainerWaiting",
                        "query": "sum by(namespace, pod, container) (kube_pod_container_status_waiting_reason{job=\"kube-state-metrics\",namespace=~\".*\"}) > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} are not scheduled.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetnotscheduled",
                            "summary": "DaemonSet pods are not scheduled."
                        },
                        "duration": 600,
                        "evaluationTime": 0.000504993,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:10.00694784Z",
                        "name": "KubeDaemonSetNotScheduled",
                        "query": "kube_daemonset_status_desired_number_scheduled{job=\"kube-state-metrics\",namespace=~\".*\"} - kube_daemonset_status_current_number_scheduled{job=\"kube-state-metrics\",namespace=~\".*\"} > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "{{ $value }} Pods of DaemonSet {{ $labels.namespace }}/{{ $labels.daemonset }} are running where they are not supposed to run.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubedaemonsetmisscheduled",
                            "summary": "DaemonSet pods are misscheduled."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000154867,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:10.007455286Z",
                        "name": "KubeDaemonSetMisScheduled",
                        "query": "kube_daemonset_status_number_misscheduled{job=\"kube-state-metrics\",namespace=~\".*\"} > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Job {{ $labels.namespace }}/{{ $labels.job_name }} is taking more than 12 hours to complete.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubejobcompletion",
                            "summary": "Job did not complete in time"
                        },
                        "duration": 43200,
                        "evaluationTime": 0.000185855,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:10.007611872Z",
                        "name": "KubeJobCompletion",
                        "query": "kube_job_spec_completions{job=\"kube-state-metrics\",namespace=~\".*\"} - kube_job_status_succeeded{job=\"kube-state-metrics\",namespace=~\".*\"} > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Job {{ $labels.namespace }}/{{ $labels.job_name }} failed to complete. Removing failed job after investigation should clear this alert.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubejobfailed",
                            "summary": "Job failed to complete."
                        },
                        "duration": 900,
                        "evaluationTime": 7.9369e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:10.007799142Z",
                        "name": "KubeJobFailed",
                        "query": "kube_job_failed{job=\"kube-state-metrics\",namespace=~\".*\"} > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "HPA {{ $labels.namespace }}/{{ $labels.hpa }} has not matched the desired number of replicas for longer than 15 minutes.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubehpareplicasmismatch",
                            "summary": "HPA has not matched descired number of replicas."
                        },
                        "duration": 900,
                        "evaluationTime": 0.00043403,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:10.007879187Z",
                        "name": "KubeHpaReplicasMismatch",
                        "query": "(kube_hpa_status_desired_replicas{job=\"kube-state-metrics\",namespace=~\".*\"} != kube_hpa_status_current_replicas{job=\"kube-state-metrics\",namespace=~\".*\"}) and (kube_hpa_status_current_replicas{job=\"kube-state-metrics\",namespace=~\".*\"} > kube_hpa_spec_min_replicas{job=\"kube-state-metrics\",namespace=~\".*\"}) and (kube_hpa_status_current_replicas{job=\"kube-state-metrics\",namespace=~\".*\"} < kube_hpa_spec_max_replicas{job=\"kube-state-metrics\",namespace=~\".*\"}) and changes(kube_hpa_status_current_replicas{job=\"kube-state-metrics\",namespace=~\".*\"}[15m]) == 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "HPA {{ $labels.namespace }}/{{ $labels.hpa }} has been running at max replicas for longer than 15 minutes.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubehpamaxedout",
                            "summary": "HPA is running at max replicas"
                        },
                        "duration": 900,
                        "evaluationTime": 0.00010834,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:10.008314226Z",
                        "name": "KubeHpaMaxedOut",
                        "query": "kube_hpa_status_current_replicas{job=\"kube-state-metrics\",namespace=~\".*\"} == kube_hpa_spec_max_replicas{job=\"kube-state-metrics\",namespace=~\".*\"}",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.001756099,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kubernetes-resources.yaml",
                "interval": 30,
                "lastEvaluation": "2021-05-07T11:54:02.941671699Z",
                "name": "kubernetes-resources",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Cluster has overcommitted CPU resource requests for Pods and cannot tolerate node failure.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuovercommit",
                            "summary": "Cluster has overcommitted CPU resource requests."
                        },
                        "duration": 300,
                        "evaluationTime": 0.00084701,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:02.941679568Z",
                        "name": "KubeCPUOvercommit",
                        "query": "sum(namespace_cpu:kube_pod_container_resource_requests:sum) / sum(kube_node_status_allocatable{resource=\"cpu\"}) > ((count(kube_node_status_allocatable{resource=\"cpu\"}) > 1) - 1) / count(kube_node_status_allocatable{resource=\"cpu\"})",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Cluster has overcommitted memory resource requests for Pods and cannot tolerate node failure.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememoryovercommit",
                            "summary": "Cluster has overcommitted memory resource requests."
                        },
                        "duration": 300,
                        "evaluationTime": 0.000235045,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:02.942529041Z",
                        "name": "KubeMemoryOvercommit",
                        "query": "sum(namespace_memory:kube_pod_container_resource_requests:sum) / sum(kube_node_status_allocatable{resource=\"memory\"}) > ((count(kube_node_status_allocatable{resource=\"memory\"}) > 1) - 1) / count(kube_node_status_allocatable{resource=\"memory\"})",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Cluster has overcommitted CPU resource requests for Namespaces.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecpuquotaovercommit",
                            "summary": "Cluster has overcommitted CPU resource requests."
                        },
                        "duration": 300,
                        "evaluationTime": 9.8925e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:02.942765062Z",
                        "name": "KubeCPUQuotaOvercommit",
                        "query": "sum(kube_resourcequota{job=\"kube-state-metrics\",resource=\"cpu\",type=\"hard\"}) / sum(kube_node_status_allocatable{resource=\"cpu\"}) > 1.5",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Cluster has overcommitted memory resource requests for Namespaces.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubememoryquotaovercommit",
                            "summary": "Cluster has overcommitted memory resource requests."
                        },
                        "duration": 300,
                        "evaluationTime": 8.9432e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:02.942865729Z",
                        "name": "KubeMemoryQuotaOvercommit",
                        "query": "sum(kube_resourcequota{job=\"kube-state-metrics\",resource=\"memory\",type=\"hard\"}) / sum(kube_node_status_allocatable{job=\"kube-state-metrics\",resource=\"memory\"}) > 1.5",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotaalmostfull",
                            "summary": "Namespace quota is going to be full."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000122212,
                        "health": "ok",
                        "labels": {
                            "severity": "info"
                        },
                        "lastEvaluation": "2021-05-07T11:54:02.942956237Z",
                        "name": "KubeQuotaAlmostFull",
                        "query": "kube_resourcequota{job=\"kube-state-metrics\",type=\"used\"} / ignoring(instance, job, type) (kube_resourcequota{job=\"kube-state-metrics\",type=\"hard\"} > 0) > 0.9 < 1",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotafullyused",
                            "summary": "Namespace quota is fully used."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000121128,
                        "health": "ok",
                        "labels": {
                            "severity": "info"
                        },
                        "lastEvaluation": "2021-05-07T11:54:02.943079222Z",
                        "name": "KubeQuotaFullyUsed",
                        "query": "kube_resourcequota{job=\"kube-state-metrics\",type=\"used\"} / ignoring(instance, job, type) (kube_resourcequota{job=\"kube-state-metrics\",type=\"hard\"} > 0) == 1",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Namespace {{ $labels.namespace }} is using {{ $value | humanizePercentage }} of its {{ $labels.resource }} quota.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubequotaexceeded",
                            "summary": "Namespace quota has exceeded the limits."
                        },
                        "duration": 900,
                        "evaluationTime": 8.2982e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:02.943201342Z",
                        "name": "KubeQuotaExceeded",
                        "query": "kube_resourcequota{job=\"kube-state-metrics\",type=\"used\"} / ignoring(instance, job, type) (kube_resourcequota{job=\"kube-state-metrics\",type=\"hard\"} > 0) > 1",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "{{ $value | humanizePercentage }} throttling of CPU in namespace {{ $labels.namespace }} for container {{ $labels.container }} in pod {{ $labels.pod }}.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-cputhrottlinghigh",
                            "summary": "Processes experience elevated CPU throttling."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000139781,
                        "health": "ok",
                        "labels": {
                            "severity": "info"
                        },
                        "lastEvaluation": "2021-05-07T11:54:02.943284909Z",
                        "name": "CPUThrottlingHigh",
                        "query": "sum by(container, pod, namespace) (increase(container_cpu_cfs_throttled_periods_total{container!=\"\"}[5m])) / sum by(container, pod, namespace) (increase(container_cpu_cfs_periods_total[5m])) > (25 / 100)",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.002370923,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kubernetes-storage.yaml",
                "interval": 30,
                "lastEvaluation": "2021-05-07T11:53:56.33140494Z",
                "name": "kubernetes-storage",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "The PersistentVolume claimed by {{ $labels.persistentvolumeclaim }} in Namespace {{ $labels.namespace }} is only {{ $value | humanizePercentage }} free.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumefillingup",
                            "summary": "PersistentVolume is filling up."
                        },
                        "duration": 60,
                        "evaluationTime": 0.001160203,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:53:56.331411661Z",
                        "name": "KubePersistentVolumeFillingUp",
                        "query": "kubelet_volume_stats_available_bytes{job=\"kubelet\",metrics_path=\"/metrics\",namespace=~\".*\"} / kubelet_volume_stats_capacity_bytes{job=\"kubelet\",metrics_path=\"/metrics\",namespace=~\".*\"} < 0.03",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Based on recent sampling, the PersistentVolume claimed by {{ $labels.persistentvolumeclaim }} in Namespace {{ $labels.namespace }} is expected to fill up within four days. Currently {{ $value | humanizePercentage }} is available.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumefillingup",
                            "summary": "PersistentVolume is filling up."
                        },
                        "duration": 3600,
                        "evaluationTime": 0.001077033,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:53:56.332574067Z",
                        "name": "KubePersistentVolumeFillingUp",
                        "query": "(kubelet_volume_stats_available_bytes{job=\"kubelet\",metrics_path=\"/metrics\",namespace=~\".*\"} / kubelet_volume_stats_capacity_bytes{job=\"kubelet\",metrics_path=\"/metrics\",namespace=~\".*\"}) < 0.15 and predict_linear(kubelet_volume_stats_available_bytes{job=\"kubelet\",metrics_path=\"/metrics\",namespace=~\".*\"}[6h], 4 * 24 * 3600) < 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "The persistent volume {{ $labels.persistentvolume }} has status {{ $labels.phase }}.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubepersistentvolumeerrors",
                            "summary": "PersistentVolume is having issues with provisioning."
                        },
                        "duration": 300,
                        "evaluationTime": 0.000119521,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:53:56.333653347Z",
                        "name": "KubePersistentVolumeErrors",
                        "query": "kube_persistentvolume_status_phase{job=\"kube-state-metrics\",phase=~\"Failed|Pending\"} > 0",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.001766946,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kubernetes-system-apiserver.yaml",
                "interval": 30,
                "lastEvaluation": "2021-05-07T11:53:52.146615657Z",
                "name": "kubernetes-system-apiserver",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "A client certificate used to authenticate to the apiserver is expiring in less than 7.0 days.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclientcertificateexpiration",
                            "summary": "Client certificate is about to expire."
                        },
                        "duration": 0,
                        "evaluationTime": 0.000618219,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:53:52.146621803Z",
                        "name": "KubeClientCertificateExpiration",
                        "query": "apiserver_client_certificate_expiration_seconds_count{job=\"apiserver\"} > 0 and on(job) histogram_quantile(0.01, sum by(job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job=\"apiserver\"}[5m]))) < 604800",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "A client certificate used to authenticate to the apiserver is expiring in less than 24.0 hours.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclientcertificateexpiration",
                            "summary": "Client certificate is about to expire."
                        },
                        "duration": 0,
                        "evaluationTime": 0.000177085,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:53:52.147242087Z",
                        "name": "KubeClientCertificateExpiration",
                        "query": "apiserver_client_certificate_expiration_seconds_count{job=\"apiserver\"} > 0 and on(job) histogram_quantile(0.01, sum by(job, le) (rate(apiserver_client_certificate_expiration_seconds_bucket{job=\"apiserver\"}[5m]))) < 86400",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "An aggregated API {{ $labels.name }}/{{ $labels.namespace }} has reported errors. It has appeared unavailable {{ $value | humanize }} times averaged over the past 10m.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-aggregatedapierrors",
                            "summary": "An aggregated API has reported errors."
                        },
                        "duration": 0,
                        "evaluationTime": 0.000189102,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:53:52.147420607Z",
                        "name": "AggregatedAPIErrors",
                        "query": "sum by(name, namespace) (increase(aggregator_unavailable_apiservice_total[10m])) > 4",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "An aggregated API {{ $labels.name }}/{{ $labels.namespace }} has been only {{ $value | humanize }}% available over the last 10m.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-aggregatedapidown",
                            "summary": "An aggregated API is down."
                        },
                        "duration": 300,
                        "evaluationTime": 0.000219021,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:53:52.147610863Z",
                        "name": "AggregatedAPIDown",
                        "query": "(1 - max by(name, namespace) (avg_over_time(aggregator_unavailable_apiservice[10m]))) * 100 < 85",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [
                            {
                                "activeAt": "2021-05-07T11:53:52.14654001Z",
                                "annotations": {
                                    "description": "KubeAPI has disappeared from Prometheus target discovery.",
                                    "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapidown",
                                    "summary": "Target disappeared from Prometheus target discovery."
                                },
                                "labels": {
                                    "alertname": "KubeAPIDown",
                                    "severity": "critical"
                                },
                                "state": "pending",
                                "value": "1e+00"
                            }
                        ],
                        "annotations": {
                            "description": "KubeAPI has disappeared from Prometheus target discovery.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapidown",
                            "summary": "Target disappeared from Prometheus target discovery."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000314115,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:53:52.147830778Z",
                        "name": "KubeAPIDown",
                        "query": "absent(up{job=\"apiserver\"} == 1)",
                        "state": "pending",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "The apiserver has terminated {{ $value | humanizePercentage }} of its incoming requests.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeapiterminatedrequests",
                            "summary": "The apiserver has terminated {{ $value | humanizePercentage }} of its incoming requests."
                        },
                        "duration": 300,
                        "evaluationTime": 0.000232154,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:53:52.148146995Z",
                        "name": "KubeAPITerminatedRequests",
                        "query": "sum(rate(apiserver_request_terminations_total{job=\"apiserver\"}[10m])) / (sum(rate(apiserver_request_total{job=\"apiserver\"}[10m])) + sum(rate(apiserver_request_terminations_total{job=\"apiserver\"}[10m]))) > 0.2",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.000511166,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kubernetes-system-controller-manager.yaml",
                "interval": 30,
                "lastEvaluation": "2021-05-07T11:54:05.676135045Z",
                "name": "kubernetes-system-controller-manager",
                "rules": [
                    {
                        "alerts": [
                            {
                                "activeAt": "2021-05-07T11:54:05.675120003Z",
                                "annotations": {
                                    "description": "KubeControllerManager has disappeared from Prometheus target discovery.",
                                    "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecontrollermanagerdown",
                                    "summary": "Target disappeared from Prometheus target discovery."
                                },
                                "labels": {
                                    "alertname": "KubeControllerManagerDown",
                                    "severity": "critical"
                                },
                                "state": "pending",
                                "value": "1e+00"
                            }
                        ],
                        "annotations": {
                            "description": "KubeControllerManager has disappeared from Prometheus target discovery.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubecontrollermanagerdown",
                            "summary": "Target disappeared from Prometheus target discovery."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000500134,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:54:05.676141912Z",
                        "name": "KubeControllerManagerDown",
                        "query": "absent(up{job=\"kube-controller-manager\"} == 1)",
                        "state": "pending",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.003391065,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kubernetes-system-kubelet.yaml",
                "interval": 30,
                "lastEvaluation": "2021-05-07T11:54:08.336943264Z",
                "name": "kubernetes-system-kubelet",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "{{ $labels.node }} has been unready for more than 15 minutes.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodenotready",
                            "summary": "Node is not ready."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000666004,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:08.336950567Z",
                        "name": "KubeNodeNotReady",
                        "query": "kube_node_status_condition{condition=\"Ready\",job=\"kube-state-metrics\",status=\"true\"} == 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "{{ $labels.node }} is unreachable and some workloads may be rescheduled.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodeunreachable",
                            "summary": "Node is unreachable."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000466827,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:08.337619993Z",
                        "name": "KubeNodeUnreachable",
                        "query": "(kube_node_spec_taint{effect=\"NoSchedule\",job=\"kube-state-metrics\",key=\"node.kubernetes.io/unreachable\"} unless ignoring(key, value) kube_node_spec_taint{job=\"kube-state-metrics\",key=~\"ToBeDeletedByClusterAutoscaler|cloud.google.com/impending-node-termination|aws-node-termination-handler/spot-itn\"}) == 1",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Kubelet '{{ $labels.node }}' is running at {{ $value | humanizePercentage }} of its Pod capacity.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubelettoomanypods",
                            "summary": "Kubelet is running at capacity."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000499166,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:08.338089393Z",
                        "name": "KubeletTooManyPods",
                        "query": "count by(node) ((kube_pod_status_phase{job=\"kube-state-metrics\",phase=\"Running\"} == 1) * on(instance, pod, namespace, cluster) group_left(node) topk by(instance, pod, namespace, cluster) (1, kube_pod_info{job=\"kube-state-metrics\"})) / max by(node) (kube_node_status_capacity{job=\"kube-state-metrics\",resource=\"pods\"} != 1) > 0.95",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "The readiness status of node {{ $labels.node }} has changed {{ $value }} times in the last 15 minutes.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubenodereadinessflapping",
                            "summary": "Node readiness status is flapping."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000212117,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:08.338591702Z",
                        "name": "KubeNodeReadinessFlapping",
                        "query": "sum by(node) (changes(kube_node_status_condition{condition=\"Ready\",status=\"true\"}[15m])) > 2",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "The Kubelet Pod Lifecycle Event Generator has a 99th percentile duration of {{ $value }} seconds on node {{ $labels.node }}.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletplegdurationhigh",
                            "summary": "Kubelet Pod Lifecycle Event Generator is taking too long to relist."
                        },
                        "duration": 300,
                        "evaluationTime": 0.000107239,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:08.33880514Z",
                        "name": "KubeletPlegDurationHigh",
                        "query": "node_quantile:kubelet_pleg_relist_duration_seconds:histogram_quantile{quantile=\"0.99\"} >= 10",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Kubelet Pod startup 99th percentile latency is {{ $value }} seconds on node {{ $labels.node }}.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletpodstartuplatencyhigh",
                            "summary": "Kubelet Pod startup latency is too high."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000290021,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:08.338913489Z",
                        "name": "KubeletPodStartUpLatencyHigh",
                        "query": "histogram_quantile(0.99, sum by(instance, le) (rate(kubelet_pod_worker_duration_seconds_bucket{job=\"kubelet\",metrics_path=\"/metrics\"}[5m]))) * on(instance) group_left(node) kubelet_node_name{job=\"kubelet\",metrics_path=\"/metrics\"} > 60",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Client certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletclientcertificateexpiration",
                            "summary": "Kubelet client certificate is about to expire."
                        },
                        "duration": 0,
                        "evaluationTime": 0.00012213,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:08.339205138Z",
                        "name": "KubeletClientCertificateExpiration",
                        "query": "kubelet_certificate_manager_client_ttl_seconds < 604800",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Client certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletclientcertificateexpiration",
                            "summary": "Kubelet client certificate is about to expire."
                        },
                        "duration": 0,
                        "evaluationTime": 8.409e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:54:08.339328419Z",
                        "name": "KubeletClientCertificateExpiration",
                        "query": "kubelet_certificate_manager_client_ttl_seconds < 86400",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Server certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletservercertificateexpiration",
                            "summary": "Kubelet server certificate is about to expire."
                        },
                        "duration": 0,
                        "evaluationTime": 9.123e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:08.339413514Z",
                        "name": "KubeletServerCertificateExpiration",
                        "query": "kubelet_certificate_manager_server_ttl_seconds < 604800",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Server certificate for Kubelet on node {{ $labels.node }} expires in {{ $value | humanizeDuration }}.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletservercertificateexpiration",
                            "summary": "Kubelet server certificate is about to expire."
                        },
                        "duration": 0,
                        "evaluationTime": 7.7262e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:54:08.339505659Z",
                        "name": "KubeletServerCertificateExpiration",
                        "query": "kubelet_certificate_manager_server_ttl_seconds < 86400",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Kubelet on node {{ $labels.node }} has failed to renew its client certificate ({{ $value | humanize }} errors in the last 5 minutes).",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletclientcertificaterenewalerrors",
                            "summary": "Kubelet has failed to renew its client certificate."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000133196,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:08.339584784Z",
                        "name": "KubeletClientCertificateRenewalErrors",
                        "query": "increase(kubelet_certificate_manager_client_expiration_renew_errors[5m]) > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Kubelet on node {{ $labels.node }} has failed to renew its server certificate ({{ $value | humanize }} errors in the last 5 minutes).",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletservercertificaterenewalerrors",
                            "summary": "Kubelet has failed to renew its server certificate."
                        },
                        "duration": 900,
                        "evaluationTime": 9.8099e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:08.339720603Z",
                        "name": "KubeletServerCertificateRenewalErrors",
                        "query": "increase(kubelet_server_expiration_renew_errors[5m]) > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [
                            {
                                "activeAt": "2021-05-07T11:54:08.336137741Z",
                                "annotations": {
                                    "description": "Kubelet has disappeared from Prometheus target discovery.",
                                    "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletdown",
                                    "summary": "Target disappeared from Prometheus target discovery."
                                },
                                "labels": {
                                    "alertname": "KubeletDown",
                                    "severity": "critical"
                                },
                                "state": "pending",
                                "value": "1e+00"
                            }
                        ],
                        "annotations": {
                            "description": "Kubelet has disappeared from Prometheus target discovery.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeletdown",
                            "summary": "Target disappeared from Prometheus target discovery."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000509168,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:54:08.339819811Z",
                        "name": "KubeletDown",
                        "query": "absent(up{job=\"kubelet\",metrics_path=\"/metrics\"} == 1)",
                        "state": "pending",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.001782009,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kubernetes-system-scheduler.yaml",
                "interval": 30,
                "lastEvaluation": "2021-05-07T11:53:49.593406866Z",
                "name": "kubernetes-system-scheduler",
                "rules": [
                    {
                        "alerts": [
                            {
                                "activeAt": "2021-05-07T11:53:49.587750705Z",
                                "annotations": {
                                    "description": "KubeScheduler has disappeared from Prometheus target discovery.",
                                    "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeschedulerdown",
                                    "summary": "Target disappeared from Prometheus target discovery."
                                },
                                "labels": {
                                    "alertname": "KubeSchedulerDown",
                                    "severity": "critical"
                                },
                                "state": "pending",
                                "value": "1e+00"
                            }
                        ],
                        "annotations": {
                            "description": "KubeScheduler has disappeared from Prometheus target discovery.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeschedulerdown",
                            "summary": "Target disappeared from Prometheus target discovery."
                        },
                        "duration": 900,
                        "evaluationTime": 0.00175813,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:53:49.593418185Z",
                        "name": "KubeSchedulerDown",
                        "query": "absent(up{job=\"kube-scheduler\"} == 1)",
                        "state": "pending",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-kubernetes-system.yaml",
                "interval": 30,
                "lastEvaluation": "0001-01-01T00:00:00Z",
                "name": "kubernetes-system",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "There are {{ $value }} different semantic versions of Kubernetes components running.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeversionmismatch",
                            "summary": "Different semantic versions of Kubernetes components running."
                        },
                        "duration": 900,
                        "evaluationTime": 0,
                        "health": "unknown",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "KubeVersionMismatch",
                        "query": "count(count by(git_version) (label_replace(kubernetes_build_info{job!~\"kube-dns|coredns\"}, \"git_version\", \"$1\", \"git_version\", \"(v[0-9]*.[0-9]*).*\"))) > 1",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Kubernetes API server client '{{ $labels.job }}/{{ $labels.instance }}' is experiencing {{ $value | humanizePercentage }} errors.'",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-kubeclienterrors",
                            "summary": "Kubernetes API server client is experiencing errors."
                        },
                        "duration": 900,
                        "evaluationTime": 0,
                        "health": "unknown",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "KubeClientErrors",
                        "query": "(sum by(instance, job) (rate(rest_client_requests_total{code=~\"5..\"}[5m])) / sum by(instance, job) (rate(rest_client_requests_total[5m]))) > 0.01",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.001198775,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-node-exporter.rules.yaml",
                "interval": 30,
                "lastEvaluation": "2021-05-07T11:53:57.325144618Z",
                "name": "node-exporter.rules",
                "rules": [
                    {
                        "evaluationTime": 0.000396275,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:53:57.325153996Z",
                        "name": "instance:node_num_cpu:sum",
                        "query": "count without(cpu) (count without(mode) (node_cpu_seconds_total{job=\"node-exporter\"}))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000133177,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:53:57.325552462Z",
                        "name": "instance:node_cpu_utilisation:rate1m",
                        "query": "1 - avg without(cpu, mode) (rate(node_cpu_seconds_total{job=\"node-exporter\",mode=\"idle\"}[1m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 5.2619e-05,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:53:57.32568638Z",
                        "name": "instance:node_load1_per_cpu:ratio",
                        "query": "(node_load1{job=\"node-exporter\"} / instance:node_num_cpu:sum{job=\"node-exporter\"})",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 5.7179e-05,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:53:57.325739539Z",
                        "name": "instance:node_memory_utilisation:ratio",
                        "query": "1 - (node_memory_MemAvailable_bytes{job=\"node-exporter\"} / node_memory_MemTotal_bytes{job=\"node-exporter\"})",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 3.4477e-05,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:53:57.325797642Z",
                        "name": "instance:node_vmstat_pgmajfault:rate1m",
                        "query": "rate(node_vmstat_pgmajfault{job=\"node-exporter\"}[1m])",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000123701,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:53:57.325832737Z",
                        "name": "instance_device:node_disk_io_time_seconds:rate1m",
                        "query": "rate(node_disk_io_time_seconds_total{device=~\"mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\",job=\"node-exporter\"}[1m])",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0.000124634,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:53:57.325956945Z",
                        "name": "instance_device:node_disk_io_time_weighted_seconds:rate1m",
                        "query": "rate(node_disk_io_time_weighted_seconds_total{device=~\"mmcblk.p.+|nvme.+|rbd.+|sd.+|vd.+|xvd.+|dm-.+|dasd.+\",job=\"node-exporter\"}[1m])",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 8.2229e-05,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:53:57.3260827Z",
                        "name": "instance:node_network_receive_bytes_excluding_lo:rate1m",
                        "query": "sum without(device) (rate(node_network_receive_bytes_total{device!=\"lo\",job=\"node-exporter\"}[1m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 6.0207e-05,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:53:57.326165982Z",
                        "name": "instance:node_network_transmit_bytes_excluding_lo:rate1m",
                        "query": "sum without(device) (rate(node_network_transmit_bytes_total{device!=\"lo\",job=\"node-exporter\"}[1m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 5.6091e-05,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:53:57.326227179Z",
                        "name": "instance:node_network_receive_drop_excluding_lo:rate1m",
                        "query": "sum without(device) (rate(node_network_receive_drop_total{device!=\"lo\",job=\"node-exporter\"}[1m]))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 5.6112e-05,
                        "health": "ok",
                        "lastEvaluation": "2021-05-07T11:53:57.326284177Z",
                        "name": "instance:node_network_transmit_drop_excluding_lo:rate1m",
                        "query": "sum without(device) (rate(node_network_transmit_drop_total{device!=\"lo\",job=\"node-exporter\"}[1m]))",
                        "type": "recording"
                    }
                ]
            },
            {
                "evaluationTime": 0.003122097,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-node-exporter.yaml",
                "interval": 30,
                "lastEvaluation": "2021-05-07T11:54:05.358712703Z",
                "name": "node-exporter",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available space left and is filling up.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemspacefillingup",
                            "summary": "Filesystem is predicted to run out of space within the next 24 hours."
                        },
                        "duration": 3600,
                        "evaluationTime": 0.000826976,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:05.358719119Z",
                        "name": "NodeFilesystemSpaceFillingUp",
                        "query": "(node_filesystem_avail_bytes{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_size_bytes{fstype!=\"\",job=\"node-exporter\"} * 100 < 40 and predict_linear(node_filesystem_avail_bytes{fstype!=\"\",job=\"node-exporter\"}[6h], 24 * 60 * 60) < 0 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available space left and is filling up fast.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemspacefillingup",
                            "summary": "Filesystem is predicted to run out of space within the next 4 hours."
                        },
                        "duration": 3600,
                        "evaluationTime": 0.00030962,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:54:05.359548707Z",
                        "name": "NodeFilesystemSpaceFillingUp",
                        "query": "(node_filesystem_avail_bytes{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_size_bytes{fstype!=\"\",job=\"node-exporter\"} * 100 < 20 and predict_linear(node_filesystem_avail_bytes{fstype!=\"\",job=\"node-exporter\"}[6h], 4 * 60 * 60) < 0 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available space left.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemalmostoutofspace",
                            "summary": "Filesystem has less than 5% space left."
                        },
                        "duration": 3600,
                        "evaluationTime": 0.000155787,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:05.359860182Z",
                        "name": "NodeFilesystemAlmostOutOfSpace",
                        "query": "(node_filesystem_avail_bytes{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_size_bytes{fstype!=\"\",job=\"node-exporter\"} * 100 < 5 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available space left.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemalmostoutofspace",
                            "summary": "Filesystem has less than 3% space left."
                        },
                        "duration": 3600,
                        "evaluationTime": 0.000195325,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:54:05.360016733Z",
                        "name": "NodeFilesystemAlmostOutOfSpace",
                        "query": "(node_filesystem_avail_bytes{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_size_bytes{fstype!=\"\",job=\"node-exporter\"} * 100 < 3 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available inodes left and is filling up.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemfilesfillingup",
                            "summary": "Filesystem is predicted to run out of inodes within the next 24 hours."
                        },
                        "duration": 3600,
                        "evaluationTime": 0.000358031,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:05.360213426Z",
                        "name": "NodeFilesystemFilesFillingUp",
                        "query": "(node_filesystem_files_free{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_files{fstype!=\"\",job=\"node-exporter\"} * 100 < 40 and predict_linear(node_filesystem_files_free{fstype!=\"\",job=\"node-exporter\"}[6h], 24 * 60 * 60) < 0 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available inodes left and is filling up fast.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemfilesfillingup",
                            "summary": "Filesystem is predicted to run out of inodes within the next 4 hours."
                        },
                        "duration": 3600,
                        "evaluationTime": 0.000232544,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:54:05.360572931Z",
                        "name": "NodeFilesystemFilesFillingUp",
                        "query": "(node_filesystem_files_free{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_files{fstype!=\"\",job=\"node-exporter\"} * 100 < 20 and predict_linear(node_filesystem_files_free{fstype!=\"\",job=\"node-exporter\"}[6h], 4 * 60 * 60) < 0 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available inodes left.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemalmostoutoffiles",
                            "summary": "Filesystem has less than 5% inodes left."
                        },
                        "duration": 3600,
                        "evaluationTime": 0.000164823,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:05.360806458Z",
                        "name": "NodeFilesystemAlmostOutOfFiles",
                        "query": "(node_filesystem_files_free{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_files{fstype!=\"\",job=\"node-exporter\"} * 100 < 5 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Filesystem on {{ $labels.device }} at {{ $labels.instance }} has only {{ printf \"%.2f\" $value }}% available inodes left.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodefilesystemalmostoutoffiles",
                            "summary": "Filesystem has less than 3% inodes left."
                        },
                        "duration": 3600,
                        "evaluationTime": 0.000188264,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:54:05.360972429Z",
                        "name": "NodeFilesystemAlmostOutOfFiles",
                        "query": "(node_filesystem_files_free{fstype!=\"\",job=\"node-exporter\"} / node_filesystem_files{fstype!=\"\",job=\"node-exporter\"} * 100 < 3 and node_filesystem_readonly{fstype!=\"\",job=\"node-exporter\"} == 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "{{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} receive errors in the last two minutes.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodenetworkreceiveerrs",
                            "summary": "Network interface is reporting many receive errors."
                        },
                        "duration": 3600,
                        "evaluationTime": 8.2948e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:05.361161643Z",
                        "name": "NodeNetworkReceiveErrs",
                        "query": "increase(node_network_receive_errs_total[2m]) > 10",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "{{ $labels.instance }} interface {{ $labels.device }} has encountered {{ printf \"%.0f\" $value }} transmit errors in the last two minutes.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodenetworktransmiterrs",
                            "summary": "Network interface is reporting many transmit errors."
                        },
                        "duration": 3600,
                        "evaluationTime": 7.9241e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:05.361245117Z",
                        "name": "NodeNetworkTransmitErrs",
                        "query": "increase(node_network_transmit_errs_total[2m]) > 10",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "{{ $value | humanizePercentage }} of conntrack entries are used",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodehighnumberconntrackentriesused",
                            "summary": "Number of conntrack are getting close to the limit"
                        },
                        "duration": 0,
                        "evaluationTime": 8.8827e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:05.361325481Z",
                        "name": "NodeHighNumberConntrackEntriesUsed",
                        "query": "(node_nf_conntrack_entries / node_nf_conntrack_entries_limit) > 0.75",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Clock on {{ $labels.instance }} is out of sync by more than 300s. Ensure NTP is configured correctly on this host.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodeclockskewdetected",
                            "summary": "Clock skew detected."
                        },
                        "duration": 600,
                        "evaluationTime": 0.000186416,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:05.361414923Z",
                        "name": "NodeClockSkewDetected",
                        "query": "(node_timex_offset_seconds > 0.05 and deriv(node_timex_offset_seconds[5m]) >= 0) or (node_timex_offset_seconds < -0.05 and deriv(node_timex_offset_seconds[5m]) <= 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Clock on {{ $labels.instance }} is not synchronising. Ensure NTP is configured on this host.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodeclocknotsynchronising",
                            "summary": "Clock not synchronising."
                        },
                        "duration": 600,
                        "evaluationTime": 5.4439e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:05.361602037Z",
                        "name": "NodeClockNotSynchronising",
                        "query": "min_over_time(node_timex_sync_status[5m]) == 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Node Exporter text file collector failed to scrape.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-nodetextfilecollectorscrapeerror",
                            "summary": "Node Exporter text file collector failed to scrape."
                        },
                        "duration": 0,
                        "evaluationTime": 5.6123e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:05.361656971Z",
                        "name": "NodeTextFileCollectorScrapeError",
                        "query": "node_textfile_scrape_error{job=\"node-exporter\"} == 1",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "RAID array '{{ $labels.device }}' on {{ $labels.instance }} is in degraded state due to 1 or more disks failures. Number of spare drives is insufficient to fix issue automatically.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-noderaiddegraded",
                            "summary": "RAID Array is degraded"
                        },
                        "duration": 900,
                        "evaluationTime": 7.2225e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:54:05.361713665Z",
                        "name": "NodeRAIDDegraded",
                        "query": "node_md_disks_required - ignoring(state) (node_md_disks{state=\"active\"}) >= 1",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "At least 1 device in RAID array on {{ $labels.instance }} failed. Array '{{ $labels.device }}' needs attention and possibly a disk swap.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-noderaiddiskfailure",
                            "summary": "Failed device in RAID array"
                        },
                        "duration": 0,
                        "evaluationTime": 4.5285e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:54:05.361786423Z",
                        "name": "NodeRAIDDiskFailure",
                        "query": "node_md_disks{state=\"fail\"} >= 1",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-node-network.yaml",
                "interval": 30,
                "lastEvaluation": "0001-01-01T00:00:00Z",
                "name": "node-network",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "message": "Network interface \"{{ $labels.device }}\" changing it's up status often on node-exporter {{ $labels.namespace }}/{{ $labels.pod }}\""
                        },
                        "duration": 120,
                        "evaluationTime": 0,
                        "health": "unknown",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "NodeNetworkInterfaceFlapping",
                        "query": "changes(node_network_up{device!~\"veth.+\",job=\"node-exporter\"}[2m]) > 2",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-node.rules.yaml",
                "interval": 30,
                "lastEvaluation": "0001-01-01T00:00:00Z",
                "name": "node.rules",
                "rules": [
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "node_namespace_pod:kube_pod_info:",
                        "query": "topk by(namespace, pod) (1, max by(node, namespace, pod) (label_replace(kube_pod_info{job=\"kube-state-metrics\",node!=\"\"}, \"pod\", \"$1\", \"pod\", \"(.*)\")))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "node:node_num_cpu:sum",
                        "query": "count by(cluster, node) (sum by(node, cpu) (node_cpu_seconds_total{job=\"node-exporter\"} * on(namespace, pod) group_left(node) topk by(namespace, pod) (1, node_namespace_pod:kube_pod_info:)))",
                        "type": "recording"
                    },
                    {
                        "evaluationTime": 0,
                        "health": "unknown",
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": ":node_memory_MemAvailable_bytes:sum",
                        "query": "sum by(cluster) (node_memory_MemAvailable_bytes{job=\"node-exporter\"} or (node_memory_Buffers_bytes{job=\"node-exporter\"} + node_memory_Cached_bytes{job=\"node-exporter\"} + node_memory_MemFree_bytes{job=\"node-exporter\"} + node_memory_Slab_bytes{job=\"node-exporter\"}))",
                        "type": "recording"
                    }
                ]
            },
            {
                "evaluationTime": 0,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-prometheus-operator.yaml",
                "interval": 30,
                "lastEvaluation": "0001-01-01T00:00:00Z",
                "name": "prometheus-operator",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Errors while performing List operations in controller {{$labels.controller}} in {{$labels.namespace}} namespace.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoperatorlisterrors",
                            "summary": "Errors while performing list operations in controller."
                        },
                        "duration": 900,
                        "evaluationTime": 0,
                        "health": "unknown",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "PrometheusOperatorListErrors",
                        "query": "(sum by(controller, namespace) (rate(prometheus_operator_list_operations_failed_total{job=\"prometheus-operator-operator\",namespace=\"metalk8s-monitoring\"}[10m])) / sum by(controller, namespace) (rate(prometheus_operator_list_operations_total{job=\"prometheus-operator-operator\",namespace=\"metalk8s-monitoring\"}[10m]))) > 0.4",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Errors while performing watch operations in controller {{$labels.controller}} in {{$labels.namespace}} namespace.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoperatorwatcherrors",
                            "summary": "Errors while performing watch operations in controller."
                        },
                        "duration": 900,
                        "evaluationTime": 0,
                        "health": "unknown",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "PrometheusOperatorWatchErrors",
                        "query": "(sum by(controller, namespace) (rate(prometheus_operator_watch_operations_failed_total{job=\"prometheus-operator-operator\",namespace=\"metalk8s-monitoring\"}[10m])) / sum by(controller, namespace) (rate(prometheus_operator_watch_operations_total{job=\"prometheus-operator-operator\",namespace=\"metalk8s-monitoring\"}[10m]))) > 0.4",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Controller {{ $labels.controller }} in {{ $labels.namespace }} namespace fails to reconcile {{ $value }} objects.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoperatorsyncfailed",
                            "summary": "Last controller reconciliation failed"
                        },
                        "duration": 600,
                        "evaluationTime": 0,
                        "health": "unknown",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "PrometheusOperatorSyncFailed",
                        "query": "min_over_time(prometheus_operator_syncs{job=\"prometheus-operator-operator\",namespace=\"metalk8s-monitoring\",status=\"failed\"}[5m]) > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "{{ $value | humanizePercentage }} of reconciling operations failed for {{ $labels.controller }} controller in {{ $labels.namespace }} namespace.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoperatorreconcileerrors",
                            "summary": "Errors while reconciling controller."
                        },
                        "duration": 600,
                        "evaluationTime": 0,
                        "health": "unknown",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "PrometheusOperatorReconcileErrors",
                        "query": "(sum by(controller, namespace) (rate(prometheus_operator_reconcile_errors_total{job=\"prometheus-operator-operator\",namespace=\"metalk8s-monitoring\"}[5m]))) / (sum by(controller, namespace) (rate(prometheus_operator_reconcile_operations_total{job=\"prometheus-operator-operator\",namespace=\"metalk8s-monitoring\"}[5m]))) > 0.1",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Errors while reconciling Prometheus in {{ $labels.namespace }} Namespace.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoperatornodelookuperrors",
                            "summary": "Errors while reconciling Prometheus."
                        },
                        "duration": 600,
                        "evaluationTime": 0,
                        "health": "unknown",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "PrometheusOperatorNodeLookupErrors",
                        "query": "rate(prometheus_operator_node_address_lookup_errors_total{job=\"prometheus-operator-operator\",namespace=\"metalk8s-monitoring\"}[5m]) > 0.1",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus operator in {{ $labels.namespace }} namespace isn't ready to reconcile {{ $labels.controller }} resources.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoperatornotready",
                            "summary": "Prometheus operator not ready"
                        },
                        "duration": 300,
                        "evaluationTime": 0,
                        "health": "unknown",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "PrometheusOperatorNotReady",
                        "query": "min by(namespace, controller) (max_over_time(prometheus_operator_ready{job=\"prometheus-operator-operator\",namespace=\"metalk8s-monitoring\"}[5m]) == 0)",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus operator in {{ $labels.namespace }} namespace rejected {{ printf \"%0.0f\" $value }} {{ $labels.controller }}/{{ $labels.resource }} resources.",
                            "runbook_url": "https://github.com/kubernetes-monitoring/kubernetes-mixin/tree/master/runbook.md#alert-name-prometheusoperatorrejectedresources",
                            "summary": "Resources rejected by Prometheus operator"
                        },
                        "duration": 300,
                        "evaluationTime": 0,
                        "health": "unknown",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "0001-01-01T00:00:00Z",
                        "name": "PrometheusOperatorRejectedResources",
                        "query": "min_over_time(prometheus_operator_managed_resources{job=\"prometheus-operator-operator\",namespace=\"metalk8s-monitoring\",state=\"rejected\"}[5m]) > 0",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            },
            {
                "evaluationTime": 0.002194673,
                "file": "/etc/prometheus/rules/prometheus-prometheus-operator-prometheus-rulefiles-0/metalk8s-monitoring-prometheus-operator-prometheus.yaml",
                "interval": 30,
                "lastEvaluation": "2021-05-07T11:53:54.860108721Z",
                "name": "prometheus",
                "rules": [
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to reload its configuration.",
                            "summary": "Failed Prometheus configuration reload."
                        },
                        "duration": 600,
                        "evaluationTime": 0.000436673,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:53:54.860115332Z",
                        "name": "PrometheusBadConfig",
                        "query": "max_over_time(prometheus_config_last_reload_successful{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) == 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Alert notification queue of Prometheus {{$labels.namespace}}/{{$labels.pod}} is running full.",
                            "summary": "Prometheus alert notification queue predicted to run full in less than 30m."
                        },
                        "duration": 900,
                        "evaluationTime": 0.00020589,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:53:54.860553699Z",
                        "name": "PrometheusNotificationQueueRunningFull",
                        "query": "(predict_linear(prometheus_notifications_queue_length{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m], 60 * 30) > min_over_time(prometheus_notifications_queue_capacity{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]))",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "{{ printf \"%.1f\" $value }}% errors while sending alerts from Prometheus {{$labels.namespace}}/{{$labels.pod}} to Alertmanager {{$labels.alertmanager}}.",
                            "summary": "Prometheus has encountered more than 1% errors sending alerts to a specific Alertmanager."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000119124,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:53:54.860760576Z",
                        "name": "PrometheusErrorSendingAlertsToSomeAlertmanagers",
                        "query": "(rate(prometheus_notifications_errors_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) / rate(prometheus_notifications_sent_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m])) * 100 > 1",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "{{ printf \"%.1f\" $value }}% minimum errors while sending alerts from Prometheus {{$labels.namespace}}/{{$labels.pod}} to any Alertmanager.",
                            "summary": "Prometheus encounters more than 3% errors sending alerts to any Alertmanager."
                        },
                        "duration": 900,
                        "evaluationTime": 0.00018408,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:53:54.860880285Z",
                        "name": "PrometheusErrorSendingAlertsToAnyAlertmanager",
                        "query": "min without(alertmanager) (rate(prometheus_notifications_errors_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) / rate(prometheus_notifications_sent_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m])) * 100 > 3",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} is not connected to any Alertmanagers.",
                            "summary": "Prometheus is not connected to any Alertmanagers."
                        },
                        "duration": 600,
                        "evaluationTime": 7.5748e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:53:54.861065064Z",
                        "name": "PrometheusNotConnectedToAlertmanagers",
                        "query": "max_over_time(prometheus_notifications_alertmanagers_discovered{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) < 1",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} has detected {{$value | humanize}} reload failures over the last 3h.",
                            "summary": "Prometheus has issues reloading blocks from disk."
                        },
                        "duration": 14400,
                        "evaluationTime": 0.000127935,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:53:54.861141751Z",
                        "name": "PrometheusTSDBReloadsFailing",
                        "query": "increase(prometheus_tsdb_reloads_failures_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[3h]) > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} has detected {{$value | humanize}} compaction failures over the last 3h.",
                            "summary": "Prometheus has issues compacting blocks."
                        },
                        "duration": 14400,
                        "evaluationTime": 7.3651e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:53:54.861270837Z",
                        "name": "PrometheusTSDBCompactionsFailing",
                        "query": "increase(prometheus_tsdb_compactions_failed_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[3h]) > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} is not ingesting samples.",
                            "summary": "Prometheus is not ingesting samples."
                        },
                        "duration": 600,
                        "evaluationTime": 5.7867e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:53:54.861345021Z",
                        "name": "PrometheusNotIngestingSamples",
                        "query": "rate(prometheus_tsdb_head_samples_appended_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) <= 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} is dropping {{ printf \"%.4g\" $value  }} samples/s with different values but duplicated timestamp.",
                            "summary": "Prometheus is dropping samples with duplicate timestamps."
                        },
                        "duration": 600,
                        "evaluationTime": 8.3437e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:53:54.861403487Z",
                        "name": "PrometheusDuplicateTimestamps",
                        "query": "rate(prometheus_target_scrapes_sample_duplicate_timestamp_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} is dropping {{ printf \"%.4g\" $value  }} samples/s with timestamps arriving out of order.",
                            "summary": "Prometheus drops samples with out-of-order timestamps."
                        },
                        "duration": 600,
                        "evaluationTime": 0.00011754,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:53:54.861487734Z",
                        "name": "PrometheusOutOfOrderTimestamps",
                        "query": "rate(prometheus_target_scrapes_sample_out_of_order_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} failed to send {{ printf \"%.1f\" $value }}% of the samples to {{ $labels.remote_name}}:{{ $labels.url }}",
                            "summary": "Prometheus fails to send samples to remote storage."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000268627,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:53:54.861606421Z",
                        "name": "PrometheusRemoteStorageFailures",
                        "query": "(rate(prometheus_remote_storage_failed_samples_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) / (rate(prometheus_remote_storage_failed_samples_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) + rate(prometheus_remote_storage_succeeded_samples_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]))) * 100 > 1",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} remote write is {{ printf \"%.1f\" $value }}s behind for {{ $labels.remote_name}}:{{ $labels.url }}.",
                            "summary": "Prometheus remote write is behind."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000130138,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:53:54.861875657Z",
                        "name": "PrometheusRemoteWriteBehind",
                        "query": "(max_over_time(prometheus_remote_storage_highest_timestamp_in_seconds{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) - on(job, instance) group_right() max_over_time(prometheus_remote_storage_queue_highest_sent_timestamp_seconds{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m])) > 120",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} remote write desired shards calculation wants to run {{ $value }} shards for queue {{ $labels.remote_name}}:{{ $labels.url }}, which is more than the max of {{ printf `prometheus_remote_storage_shards_max{instance=\"%s\",job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}` $labels.instance | query | first | value }}.",
                            "summary": "Prometheus remote write desired shards calculation wants to run more than configured max shards."
                        },
                        "duration": 900,
                        "evaluationTime": 0.000111533,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:53:54.862006458Z",
                        "name": "PrometheusRemoteWriteDesiredShards",
                        "query": "(max_over_time(prometheus_remote_storage_shards_desired{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) > max_over_time(prometheus_remote_storage_shards_max{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]))",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} has failed to evaluate {{ printf \"%.0f\" $value }} rules in the last 5m.",
                            "summary": "Prometheus is failing rule evaluations."
                        },
                        "duration": 900,
                        "evaluationTime": 7.6758e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "critical"
                        },
                        "lastEvaluation": "2021-05-07T11:53:54.862118555Z",
                        "name": "PrometheusRuleFailures",
                        "query": "increase(prometheus_rule_evaluation_failures_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} has missed {{ printf \"%.0f\" $value }} rule group evaluations in the last 5m.",
                            "summary": "Prometheus is missing rule evaluations due to slow rule group evaluation."
                        },
                        "duration": 900,
                        "evaluationTime": 5.5317e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:53:54.862195875Z",
                        "name": "PrometheusMissingRuleEvaluations",
                        "query": "increase(prometheus_rule_group_iterations_missed_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) > 0",
                        "state": "inactive",
                        "type": "alerting"
                    },
                    {
                        "alerts": [],
                        "annotations": {
                            "description": "Prometheus {{$labels.namespace}}/{{$labels.pod}} has dropped {{ printf \"%.0f\" $value }} targets because the number of targets exceeded the configured target_limit.",
                            "summary": "Prometheus has dropped targets because some scrape configs have exceeded the targets limit."
                        },
                        "duration": 900,
                        "evaluationTime": 4.8855e-05,
                        "health": "ok",
                        "labels": {
                            "severity": "warning"
                        },
                        "lastEvaluation": "2021-05-07T11:53:54.862251661Z",
                        "name": "PrometheusTargetLimitHit",
                        "query": "increase(prometheus_target_scrape_pool_exceeded_target_limit_total{job=\"prometheus-operator-prometheus\",namespace=\"metalk8s-monitoring\"}[5m]) > 0",
                        "state": "inactive",
                        "type": "alerting"
                    }
                ]
            }
        ]
    },
    "status": "success"
}